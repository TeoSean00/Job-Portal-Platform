name: Push to main

on:
  push:
    branches: [main]

env:
  NODE_VERSION: "18.x"

concurrency:
  group: ${{ github.ref }}-on-main

jobs:
  lint-next:
    runs-on: ubuntu-latest
    continue-on-error: false
    timeout-minutes: 5
    steps:
      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install xz-utils procps
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: |
          npm i
      - name: Lint
        run: npm run lint
      - name: Typecheck
        run: npm run typecheck
      - name: Markdown lint
        run: npm run lint:markdown

  build-next:
    runs-on: ubuntu-latest
    continue-on-error: false
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: |
          npm ci
      - name: Build
        run: npm run build
  
  unit-test-next:
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/docker/library/ubuntu:latest
    continue-on-error: false
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: |
          npm ci
      - name: Run unit tests
        run: npm run test

  lint-fastapi:
    runs-on: ubuntu-latest
    continue-on-error: false
    timeout-minutes: 5
    strategy:
      matrix:
        python-version: ["3.9"]
    env:
      AWS_RDS_MYSQL_URL: ${{ secrets.AWS_RDS_MYSQL_URL }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1
      - name: Install dependencies
        run: |
          cd api
          pipenv install --dev
      - name: Lint with flake8
        run: |
          cd api
          pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build-fastapi:
    runs-on: ubuntu-latest
    continue-on-error: false
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.9"]
    env:
      AWS_RDS_MYSQL_URL: ${{ secrets.AWS_RDS_MYSQL_URL }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1
      - name: Install dependencies
        run: |
          pipenv install --dev
      - name: Build FastAPI
        run: |
          pipenv run uvicorn api.main:app &  # Start in background
          sleep 5  # Wait for 5 seconds
          kill $!  # Kill the background process
  
  unit-test-fastapi:
    runs-on: ubuntu-latest
    continue-on-error: false
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.9"]
    env:
      AWS_RDS_MYSQL_URL: ${{ secrets.AWS_RDS_MYSQL_URL }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1
      - name: Install dependencies
        run: |
          pipenv install --dev
      - name: Run unit tests
        run: |
          pipenv run pytest .